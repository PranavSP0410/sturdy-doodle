from  tkinter import *
from tkinter import messagebox
from datetime import date
import sqlite3
def check():
   a1=(e1.get())
   a2=(e2.get())
   if a2=="xyz":
      window = Toplevel(root)
      window.title('Library Management System')
      l4.config(text='')
      def sd():
         window1 = Toplevel(window)
         window1.title('Student Information')
         window1.minsize(200,220)
         show_student_1=Label(window1,text='',font=('Verdana',13))
         show_student_2=Label(window1,text='',font=('Verdana',13))
         show_student_3=Label(window1,text='',font=('Verdana',13))
         show_student_1.grid(row=4,column=1)
         show_student_2.grid(row=5,column=1)
         show_student_3.grid(row=6,column=1)
         def code():
            
            a=(e1.get())
            if a.isdigit()==True:
               if len(a)>4:
                  l3.config(text="#ERROR! THE CODE EXCEEDS THE MAXIMUM NUMBER OF DIGITS!",font=('Algerian',13))
               elif len(a)<4:
                  l3.config(text="#ERROR! THE CODE SIZE IS SMALLER THAN THE MINIMUM NUMBER OF DIGITS!",font=('Algerian',13))
               else:
                  a=(e1.get())
                  l3.config(text='')
                  conn=sqlite3.connect('library.db')
                  cursor=conn.execute("SELECT * from student_register WHERE StudentID={}".format(int(a)))
                  g=cursor.fetchall()
                  show_student_1.config(text='')
                  show_student_2.config(text='')
                  show_student_3.config(text='')
                  if len(g)!=0:
                     for row in g:
                        d='Student Name: '+str(row[1])
                        b='Student Class: '+str(row[2])
                        c='Student Section: '+str(row[3])
                        show_student_1.config(text=str(d))
                        show_student_2.config(text=str(b))
                        show_student_3.config(text=str(c))
                  else:
                     show_student_1.config(text='The Student ID Does Not Exist!')
                     show_student_2.config(text='')
                     show_student_3.config(text='')
                  conn.commit()
                  conn.close()
         def add_student():
            window2 = Toplevel(window1)
            window2.title('Registration - Students')
            '''conn = sqlite3.connect('library.db')
            conn.execute("create table student_register\
                                 (StudentID INT(4) PRIMARY KEY NOT NULL,\
                                 StudentName VARCHAR(30) NOT NULL,\
                                 StudentClass INT(2) NOT NULL,\
                                 StudentSection CHAR(1) NOT NULL);")
            conn.commit()
            conn.close()'''
         

            student_register1=Label(window2,text="Enter the details of student below: ",font=('Constantia',16))
            student_register1.grid(row=0,column=0,padx=10,pady=10)
            student_register2=Label(window2,text="Enter the id number of student: ",font=('Constantia',13))
            student_register2.grid(row=1,column=0,padx=10,pady=10)
            student_register_ent2=Entry(window2,font=('Cooper Black',13),width=10)
            student_register_ent2.grid(row=1,column=1,padx=10,pady=10)
            student_register3=Label(window2,text="Enter the name of student: ",font=('Constantia',13))
            student_register3.grid(row=2,column=0,padx=10,pady=10)
            student_register_ent3=Entry(window2,font=('Cooper Black',13),width=10)
            student_register_ent3.grid(row=2,column=1,padx=10,pady=10)
            student_register4=Label(window2,text="Enter the class of student: ",font=('Constantia',13))
            student_register4.grid(row=3,column=0,padx=10,pady=10)
            student_register_ent4=Entry(window2,font=('Cooper Black',13),width=10)
            student_register_ent4.grid(row=3,column=1,padx=10,pady=10)
            student_register5=Label(window2,text="Enter the section of student: ",font=('Constantia',13))
            student_register5.grid(row=4,column=0,padx=10,pady=10)
            student_register_ent5=Entry(window2,font=('Cooper Black',13),width=10)
            student_register_ent5.grid(row=4,column=1,padx=10,pady=10)
            student_result=Label(window2,font=('Algerian',15))
            student_result.grid(row=6,column=0,padx=10,pady=10)
            
            def submit_student():
               try:
                     conn = sqlite3.connect('library.db')
                     conn.execute("INSERT INTO student_register VALUES({},'{}',{},'{}');".format(int(student_register_ent2.get()),str(student_register_ent3.get()),int(student_register_ent4.get()),str(student_register_ent5.get())))
                     conn.commit()
                     conn.close()
                     student_result.config(text="Student Successfully Registered!")
               except:
                     student_result.config(text="Student Registeration Unsuccessful, Please Try Again...!")
            def clear():
               a1=(student_register_ent2.get())
               a2=(student_register_ent3.get())
               a3=(student_register_ent4.get())
               a4=(student_register_ent5.get())
               student_register_ent2.delete(0,len(a1))
               student_register_ent3.delete(0,len(a2))
               student_register_ent4.delete(0,len(a3))
               student_register_ent5.delete(0,len(a4))
               student_result.config(text="")
            student_register_but1=Button(window2,text="Register",bg='white',activeforeground = "yellow",activebackground = "black",height=2,width=9,font=("Verdana",13),command=submit_student)
            student_register_but1.grid(row=5,column=0)
            student_register_but2=Button(window2,text="Clear",bg='white',activeforeground = "yellow",activebackground = "black",height=2,width=9,font=("Verdana",13),command=clear)
            student_register_but2.grid(row=5,column=1)
         def del_student():
            window8=Toplevel(window1)
            window8.title('Deletion - Student Record')
            student_delete=Label(window8,text="DELETION OF STUDENT ",font=('Cambria',20))
            student_delete.grid(row=0,column=0,padx=10,pady=10)
            student_delete2=Label(window8,text="Enter the Library ID Number of the Student: ",font=('Constantia',13))
            student_delete2.grid(row=2,column=0,padx=10,pady=10)
            student_delete_ent2=Entry(window8,font=('Cooper Black',13),width=10)
            student_delete_ent2.grid(row=2,column=1,padx=10,pady=10)
            student_del_result=Label(window8,font=('Algerian',15))
            student_del_result.grid(row=4,column=0,padx=10,pady=10)
            student_check1=Label(window8,font=('Algerian',15))
            student_check2=Label(window8,font=('Algerian',15))
            student_check3=Label(window8,font=('Algerian',15))
            student_check1.grid(row=5,column=0,padx=10,pady=10)
            student_check2.grid(row=6,column=0,padx=10,pady=10)
            student_check3.grid(row=7,column=0,padx=10,pady=10)
            def submit_del_stud():
               student_del_result.config(text='')
               student_check1.config(text='')
               student_check2.config(text='')
               student_check3.config(text='')
               a=(student_delete_ent2.get())
               conn=sqlite3.connect('library.db')
               cursor=conn.execute("SELECT * from student_register WHERE StudentID={}".format(int(a)))
               g=cursor.fetchall()
               if len(g)!=0:
                  conn.execute("DELETE FROM student_register WHERE StudentID={};".format(int(a)))
                  student_del_result.config(text='Student Record Deleted.')
                  conn.commit()
                  conn.close()
               else:
                  student_del_result.config(text='Sorry, an error ocurred! Student Record Not Deleted.')
            def check_del_student():
               a=student_delete_ent2.get()
               student_del_result.config(text='')
               student_check1.config(text='')
               student_check2.config(text='')
               student_check3.config(text='')
               conn=sqlite3.connect('library.db')
               cursor=conn.execute("SELECT * from student_register WHERE StudentID={}".format(int(a)))
               g=cursor.fetchall()
               if len(g)==0:
                  student_check1.config(text='This Student ID Does Not Exist!')
                  student_check2.config(text='')
                  student_check3.config(text='')
               else:
                  for row in g:
                     b='Student Name: '+str(row[1])
                     c='Student Class: '+str(row[2])
                     d='Student Section: '+str(row[3])
                     
                     student_check1.config(text=str(b))
                     student_check2.config(text=str(c))
                     student_check3.config(text=str(d))
               conn.commit()
               conn.close()
            student_delete_but1=Button(window8,text="Delete",bg='white',activeforeground = "yellow",activebackground = "red",height=2,width=9,font=("Verdana",13),command=submit_del_stud)
            student_delete_but1.grid(row=3,column=0)
            student_delete_but2=Button(window8,text="Check",bg='white',activeforeground = "yellow",activebackground = "red",height=2,width=9,font=("Verdana",13),command=check_del_student)
            student_delete_but2.grid(row=3,column=1)
         menubar = Menu(window1)  
         menubar.add_command(label="Register",font=('Constantia',13),command=add_student)
         menubar.add_command(label="Delete",font=('Constantia',13),command=del_student)
         window1.config(menu=menubar)
         window1.config(menu=menubar)
         l1=LabelFrame(window1,text="STUDENT INFORMATION",font=("Berlin Sans FB Demi",20))
         l2=Label(l1,text="Enter The Student Library Identity Code: ",font=('Bahnschrift',14))
         l3=Label(l1)
         e1=Entry(l1,font=('Cooper Black',14))
         l1.grid(row=1,column=1,padx=10,pady=10)
         l2.grid(row=2,column=1,padx=5,pady=10)
         l3.grid(row=3,column=1,padx=5,pady=10)
         b1=Button(l1,text="Submit",bg='white',activeforeground = "white",activebackground = "green",height=1,width=7,font=('Bahnschrift',14),command=code)
         b1.grid(row=3,column=2,padx=5,pady=10)
         e1.grid(row=2,column=2,padx=10,pady=10)
      def book():
         window3 = Toplevel(window)
         window3.title('Book Details ')
         def add_book():
            window4=Toplevel(window3)
            window4.title('Addition - Book Records')
            '''conn = sqlite3.connect('library.db')
            conn.execute("create table books\
                                 (BOOKID INT(4) PRIMARY KEY NOT NULL,\
                                 BookName VARCHAR(30) NOT NULL,\
                                 BookAuthor VARCHAR(30) NOT NULL);")
            conn.commit()
            conn.close()'''

            book_register1=Label(window4,text="Enter the details of book below: ",font=('Constantia',16))
            book_register1.grid(row=0,column=0,padx=10,pady=10)
            book_register2=Label(window4,text="Enter the id number of book: ",font=('Constantia',13))
            book_register2.grid(row=1,column=0,padx=10,pady=10)
            book_register_ent2=Entry(window4,font=('Cooper Black',13),width=10)
            book_register_ent2.grid(row=1,column=1,padx=10,pady=10)
            book_register3=Label(window4,text="Enter the name of book: ",font=('Constantia',13))
            book_register3.grid(row=2,column=0,padx=10,pady=10)
            book_register_ent3=Entry(window4,font=('Cooper Black',13),width=10)
            book_register_ent3.grid(row=2,column=1,padx=10,pady=10)
            book_register4=Label(window4,text="Enter the name of the author/writer: ",font=('Constantia',13))
            book_register4.grid(row=3,column=0,padx=10,pady=10)
            book_register_ent4=Entry(window4,font=('Cooper Black',13),width=10)
            book_register_ent4.grid(row=3,column=1,padx=10,pady=10)
            book_result=Label(window4,font=('Algerian',15))
            book_result.grid(row=5,column=0,padx=10,pady=10)
            def submit_book():
               try:
                     conn = sqlite3.connect('library.db')
                     conn.execute("INSERT INTO books VALUES({},'{}','{}');".format(int(book_register_ent2.get()),str(book_register_ent3.get()),str(book_register_ent4.get())))
                     conn.commit()
                     conn.close()
                     book_result.config(text="Book Successfully Added!")
               except:
                     book_result.config(text="Book Addition Unsuccessful, Please Try Again...!")
            def clear_book():
               a1=(book_register_ent2.get())
               a2=(book_register_ent3.get())
               a3=(book_register_ent4.get())
               book_register_ent2.delete(0,len(a1))
               book_register_ent3.delete(0,len(a2))
               book_register_ent4.delete(0,len(a3))
               book_result.config(text="")
            book_register_but1=Button(window4,text="Add",bg='white',activeforeground = "yellow",activebackground = "black",height=2,width=9,font=("Verdana",13),command=submit_book)
            book_register_but1.grid(row=4,column=0)
            book_register_but2=Button(window4,text="Clear",bg='white',activeforeground = "yellow",activebackground = "black",height=2,width=9,font=("Verdana",13),command=clear_book)
            book_register_but2.grid(row=4,column=1)
         def display_book():
            window5= Toplevel(window3)
            window5.title('Display-Book')
            book_show1=Label(window5,text='',font=('Constantia',14))
            book_show2=Label(window5,text='',font=('Constantia',14))
            book_show3=Label(window5,text='',font=('Constantia',14))
            book_show1.grid(row=5,column=0)
            book_show2.grid(row=6,column=0)
            book_show3.grid(row=7,column=0)
            def show_result_book():
               a=book_display_entry1.get()
               book_show1.config(text='')
               book_show2.config(text='')
               conn=sqlite3.connect('library.db')
               cursor=conn.execute("SELECT * from books WHERE BookID={}".format(int(a)))
               g=cursor.fetchall()
               if len(g)==0:
                  book_show1.config(text='This Book ID Does Not Exist!')
                  book_show2.config(text='')
               else:
                  for row in g:
                     b='Book Name: '+str(row[1])
                     c='Book Author: '+str(row[2])
                     book_show1.config(text=str(b))
                     book_show2.config(text=str(c))
               conn.commit()
               conn.close()
            book_display_label1=Label(window5,text='BOOK DETAILS',font=('Verdana',20))
            book_display_label2=Label(window5,text='Enter The Book Code: ',font=('Comic Sans MS',16))
            book_display_entry1=Entry(window5,font=('Banschrift',16))
            book_display_button1=Button(window5,text='Submit',bg='white',font=('Comic Sans MS',16),command=show_result_book)
            book_display_label1.grid(row=0,column=1)
            book_display_label2.grid(row=2,column=0)
            book_display_entry1.grid(row=2,column=1)
            book_display_button1.grid(row=3,column=1)


         def del_book():
            window7=Toplevel(window3)
            window7.title('Deletion - Book Records')
            book_delete=Label(window7,text="DELETION OF BOOK",font=('Cambria',20))
            book_delete.grid(row=0,column=0,padx=10,pady=10)
            book_delete2=Label(window7,text="Enter the  Book ID number: ",font=('Constantia',13))
            book_delete2.grid(row=2,column=0,padx=10,pady=10)
            book_delete_ent2=Entry(window7,font=('Cooper Black',13),width=10)
            book_delete_ent2.grid(row=2,column=1,padx=10,pady=10)
            book_del_result=Label(window7,font=('Algerian',15))
            book_del_result.grid(row=5,column=0,padx=10,pady=10)
            book_check1=Label(window7,font=('Algerian',15))
            book_check2=Label(window7,font=('Algerian',15))
            book_check1.grid(row=6,column=0,padx=10,pady=10)
            book_check2.grid(row=7,column=0,padx=10,pady=10)
            def submit_del_book():
               book_check1.config(text='')
               book_check2.config(text='')
               book_del_result.config(text='')
               a=(book_delete_ent2.get())
               conn=sqlite3.connect('library.db')
               cursor=conn.execute("SELECT * from books WHERE BookID={}".format(int(a)))
               g=cursor.fetchall()
               if len(g)!=0:
                  
                  conn.execute("DELETE FROM books WHERE BookID={};".format(int(a)))
                  book_del_result.config(text='Book Deleted From Memory')
                  conn.commit()
                  conn.close()
               else:
                  book_del_result.config(text='Sorry, an error ocurred! Book Could Not Be Deleted.')
            def check_del_book():
               a=book_delete_ent2.get()
               book_del_result.config(text='')
               book_check1.config(text='')
               book_check2.config(text='')
               conn=sqlite3.connect('library.db')
               cursor=conn.execute("SELECT * from books WHERE BookID={}".format(int(a)))
               g=cursor.fetchall()
               if len(g)==0:
                  book_check1.config(text='This Book ID Does Not Exist!')
                  book_check2.config(text='')
               else:
                  for row in g:
                     b='Book Name: '+str(row[1])
                     c='Book Author: '+str(row[2])
                     book_check1.config(text=str(b))
                     book_check2.config(text=str(c))
               conn.commit()
               conn.close()
               
            book_delete_but1=Button(window7,text="Delete",fg='red',bg='white',activeforeground = "white",activebackground = "red",height=2,width=9,font=("Verdana",13),command=submit_del_book)
            book_delete_but1.grid(row=4,column=0)
            book_delete_but2=Button(window7,text="Check",fg='blue',bg='white',activeforeground = "white",activebackground = "blue",height=2,width=9,font=("Verdana",13),command=check_del_book)
            book_delete_but2.grid(row=4,column=1)
         def book_update():
            window9=Toplevel(window3)
            window9.title('Updation - Book')
            book_update1=Label(window9,text="UPDATION : ",font=('Constantia',20))
            book_update1.grid(row=0,column=0,padx=10,pady=10)
            book_update2=Label(window9,text="Enter the ID Number of the Book Taken: ",font=('Constantia',13))
            book_update2.grid(row=1,column=0,padx=10,pady=10)
            book_update_ent2=Entry(window9,font=('Cooper Black',13),width=10)
            book_update_ent2.grid(row=1,column=1,padx=10,pady=10)
            book_update3=Label(window9,text="Enter the ID Number of the Student: ",font=('Constantia',13))
            book_update3.grid(row=2,column=0,padx=10,pady=10)
            book_update_ent3=Entry(window9,font=('Cooper Black',13),width=10)
            book_update_ent3.grid(row=2,column=1,padx=10,pady=10)
            book_update_but1=Button(window9,text='Update',bg='white',font=('Aharoni',13))
            book_update_but1.grid(row=3,column=1,padx=10,pady=10)
            book_update_result=Label(window9,font=('Algerian',15))
            book_update_result.grid(row=4,column=0,padx=10,pady=10)
         book_label_main=Label(window3,text='Enter Your Choice',font=('Bernard MT Condensed',20))   
         book_button_main1=Button(window3,text='Addition of Book',bg='white',activeforeground = "white",activebackground = "black",height=2,width=18,font=("Verdana",13),command=add_book)
         book_button_main2=Button(window3,text='Display of Book',bg='white',activeforeground = "white",activebackground = "black",height=2,width=18,font=("Verdana",13),command=display_book)
         book_button_main3=Button(window3,text='Updation of Book',bg='white',activeforeground = "white",activebackground = "black",height=2,width=18,font=("Verdana",13),command=book_update)
         book_button_main4=Button(window3,text='Deletion of Book',bg='white',activeforeground = "white",activebackground = "black",height=2,width=18,font=("Verdana",13),command=del_book)
         book_label_main.grid(row=0,column=0,padx=10,pady=10)
         book_button_main1.grid(row=2,column=0,padx=10,pady=10)
         book_button_main2.grid(row=4,column=0,padx=10,pady=10)
         book_button_main3.grid(row=6,column=0,padx=10,pady=10)
         book_button_main4.grid(row=8,column=0,padx=10,pady=10)
         
         
      def mesg():
         m=messagebox.askquestion("Confirm","Are you sure to quit?")
         if m=='yes':
            root.destroy()
      f1=Frame(window)
      f1.pack()
      la=Label(f1,text="Hello "+a1+" ! Welcome to our Website on School Library Management System.",font=('Stencil',20))
      lb=LabelFrame(f1,text="Enter your choice",font=('Castellar Bold',18))
      ck1 = Button(lb, text = "Student Details",fg='blue',bg='white',activeforeground = "white",activebackground = "purple",font=('Script MT Bold',16),height=2,width=14,command=sd)    
      ck2 = Button(lb, text = "Book Details",fg='blue',bg='white',activeforeground = "white",activebackground = "purple",font=('Script MT Bold',16),height=2,width=14,command=book)    
      ck3 = Button(lb, text = "Late Submission",fg='blue',bg='white',activeforeground = "white",activebackground = "purple",font=('Script MT Bold',16),height=2,width=14)
      ck4 = Button(lb, text = "Quit",fg='red',bg='white',activeforeground = "white",activebackground = "red",font=('Script MT Bold',16),height=2,width=14,command=mesg)
      la.pack()
      lb.pack(fill='both',padx=20,pady=20)
      ck1.pack(padx=10,pady=10)    
      ck2.pack(padx=10,pady=10)   
      ck3.pack(padx=10,pady=10)
      ck4.pack(padx=10,pady=10)

   else:
      
      l4.config(text="Wrong Input",font=("Copperplate Gothic Bold",12))

def reset():
   a1=(e1.get())
   a2=(e2.get())
   e1.delete(0,len(a1))
   e2.delete(0,len(a2))    

root=Tk()
root.title('Security Check')
root.minsize(500,290)
s=str(date.today())
l=LabelFrame(root,text='Security Check',font=('Cooper Black',17),fg='Navy Blue')
l.pack()
l1=Label(l,text='Username:',font=("Cambria",15))
l1.grid(row=0,column=0,padx=10,pady=10)
e1=Entry(l,font=('Comic Sans MS',15))
e1.grid(row=0,column=1,padx=10,pady=10)
l2=Label(l,text='Password:',font=("Cambria",15))
l2.grid(row=1,column=0,padx=10,pady=10)
e2=Entry(l,font=('Comic Sans MS',15),show='*')
e2.grid(row=1,column=1,padx=10,pady=10)
b1=Button(l,text="Submit",font=('Rockwell',16),fg='blue',bg='white',activeforeground = "white",activebackground = "green",height=2,width=10,command=check)
b2=Button(l,text="Reset",font=('Rockwell',16),fg='red',bg='white',activeforeground = "white",activebackground = "red",height=2,width=10,command=reset)
l4=Label(l)
l4.grid(row=3,column=0,padx=10,pady=10)
b1.grid(row=2,column=0,padx=10,pady=5)
b2.grid(row=2,column=1,padx=10,pady=5)

root.mainloop()
